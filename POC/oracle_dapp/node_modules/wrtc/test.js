var assert = require('assert');
var RTCPeerConnection = require('.').RTCPeerConnection;
var pc1 = new RTCPeerConnection({ iceServers: [] });
var pc2 = new RTCPeerConnection({ iceServers: [] });

console.log('pc1.createOffer()');
pc1.createOffer().then(offer => {
  console.log('pc1.setLocalDescription(offer)', offer);
  return pc1.setLocalDescription(offer);
}).then(() => {
  console.log('pc2.setRemoteDescription(pc1.localDescription)');
  return pc2.setRemoteDescription(pc1.localDescription);
}).then(() => {
  console.log('pc2.createAnswer()');
  return pc2.createAnswer();
}).then(answer => {
  console.log('pc2.setLocalDescription(answer)', answer);
  return pc2.setLocalDescription(answer);
}).then(() => {
  console.log('pc1.setRemoteDescription(pc2.localDescription');
  return pc1.setRemoteDescription(pc2.localDescription);
}).then(() => {
  console.log('Success!');
  pc1.close();
  pc2.close();
}).catch(error => {
  console.error('Failure!');
  console.error(error.stack);
  process.exit(1);
});

pc2.onicecandidate = (event => {
  if (!event.candidate) {
    console.log('pc2.iceGatheringState === "%s"', pc2.iceGatheringState);
    return;
  }
  var candidate = event.candidate;
  console.log('pc1.addIceCandidate(candidate)', candidate);
  pc1.addIceCandidate(candidate).then(() => {
    console.log('pc1.addIceCandidate(candidate) success!', candidate);
  }, error => {
    console.error('pc1.addIceCandidate(candidate) failure!', error);
  });
});

pc1.onicecandidate = (event => {
  if (!event.candidate) {
    console.log('pc1.iceGatheringState === "%s"', pc1.iceGatheringState);
    return;
  }
  var candidate = event.candidate;
  console.log('pc2.addIceCandidate(candidate)', candidate);
  pc2.addIceCandidate(candidate).then(() => {
    console.log('pc2.addIceCandidate(candidate) success!', candidate);
  }, error => {
    console.error('pc2.addIceCandidate(candidate) failure!', error);
  });
});

pc1.oniceconnectionstatechange = () => {
  console.log('pc1.iceConnectionState === "%s"', pc1.iceConnectionState);
};

pc2.oniceconnectionstatechange = () => {
  console.log('pc2.iceConnectionState === "%s"', pc2.iceConnectionState);
};
